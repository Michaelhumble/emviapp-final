import "https://deno.land/x/xhr@0.1.0/mod.ts";
import { serve } from "https://deno.land/std@0.168.0/http/server.ts";
import { createClient } from 'https://esm.sh/@supabase/supabase-js@2.45.0';

const openAIApiKey = Deno.env.get('OPENAI_API_KEY');
const supabaseUrl = Deno.env.get('SUPABASE_URL')!;
const supabaseServiceKey = Deno.env.get('SUPABASE_SERVICE_ROLE_KEY')!;

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
};

const supabase = createClient(supabaseUrl, supabaseServiceKey);

serve(async (req) => {
  if (req.method === 'OPTIONS') {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    const { message, userId, userName, language, isAuthenticated } = await req.json();

    console.log('üåü LITTLE SUNSHINE V3.0 - FRESH START:', {
      message: message?.slice(0, 50) + '...',
      userId: userId?.slice(0, 8) + '...',
      userName,
      language,
      isAuthenticated,
      timestamp: new Date().toISOString()
    });

    if (!openAIApiKey) {
      console.error('‚ùå OpenAI API key not configured');
      return new Response(JSON.stringify({ 
        error: 'OpenAI API key not configured',
        needsApiKey: true 
      }), {
        status: 500,
        headers: { ...corsHeaders, 'Content-Type': 'application/json' },
      });
    }

    if (!message?.trim()) {
      throw new Error('Valid message is required');
    }

    const cleanMessage = message.trim();
    const detectedLanguage = detectLanguage(cleanMessage);
    
    // üöÄ WORLD-CLASS AI SYSTEM PROMPT - FRESH BUILD
    const systemPrompt = `You are Sunshine ‚òÄÔ∏è, EmviApp's world-class AI business advisor and conversion specialist.

üéØ YOUR MISSION: Transform every conversation into a successful business outcome for artists, salon owners, and customers.

üè¢ EMVIAPP COMPLETE BUSINESS KNOWLEDGE:

**PRICING (Always Current):**
‚Ä¢ FREE TIER: First job post FREE, first salon listing FREE, basic profile, community access
‚Ä¢ PREMIUM TIER: $29/month - Unlimited posts, priority placement, advanced analytics, VIP support

**PLATFORM FEATURES:**
‚Ä¢ Artists: Job search, portfolio showcase, booking system, earnings tracking
‚Ä¢ Salon Owners: Staff hiring, salon sales, team management, analytics dashboard  
‚Ä¢ Customers: Service discovery, booking, reviews, artist directory

**SUCCESS STORIES:**
1. Sofia Chen (Nail Artist, SF): "$47K monthly earnings using EmviApp's AI discovery"
2. Magic Nails (Westminster): "Hired 15 qualified technicians in 3 months"  
3. David Kim (Hair Stylist, NYC): "Built 300+ client waitlist with portfolio features"
4. Lotus Spa (Little Saigon): "Sold salon for asking price in 6 weeks"
5. Jennifer Martinez (Customer, LA): "Found perfect nail artist - every booking 5-star"

üõ°Ô∏è PROTECTED BUSINESS ROUTES (NEVER MODIFY):
‚Ä¢ /auth/signup - User registration (ALWAYS direct here for signups)
‚Ä¢ /post-job - Job posting workflow (protected)
‚Ä¢ /sell-salon - Salon listing workflow (protected)  
‚Ä¢ /checkout - Payment processing (Stripe)
‚Ä¢ /dashboard/* - All dashboards (protected)

üéØ CONVERSION STRATEGY:
1. **Detect User Intent** (Artist/Salon Owner/Customer)
2. **Understand Their Goal** (hiring, job seeking, services)
3. **Guide to Protected Routes** (signup ‚Üí post ‚Üí payment)
4. **Explain Value Proposition** (ROI, success stories)
5. **Provide Clear Next Steps** (specific actions)

‚ùì TOP FAQS & PERFECT ANSWERS:

**Q: What's the difference between free and premium?**
${detectedLanguage === 'vi' ? 
`A: üÜì MI·ªÑN PH√ç: ƒêƒÉng 1 tin tuy·ªÉn d·ª•ng ƒë·∫ßu, 1 tin b√°n salon ƒë·∫ßu, h·ªì s∆° c∆° b·∫£n
üíé PREMIUM ($29/th√°ng): ƒêƒÉng tin kh√¥ng gi·ªõi h·∫°n, ∆∞u ti√™n hi·ªÉn th·ªã h√†ng ƒë·∫ßu, dashboard chuy√™n nghi·ªáp, h·ªó tr·ª£ VIP 24/7

‚û°Ô∏è H·∫ßu h·∫øt salon ki·∫øm ƒë∆∞·ª£c $29 t·ª´ 1 ·ª©ng vi√™n t·ªët duy nh·∫•t!` :
`A: üÜì FREE: First job post, first salon listing, basic profile features
üíé PREMIUM ($29/month): Unlimited posts, priority placement, professional analytics, VIP support

‚û°Ô∏è Most salons make back $29 from just ONE quality hire!`}

**Q: How do I post a job or list my salon?**
${detectedLanguage === 'vi' ? 
`A: **B∆∞·ªõc 1:** ƒêƒÉng k√Ω mi·ªÖn ph√≠ t·∫°i: /auth/signup
**B∆∞·ªõc 2:** ƒêƒÉng tin tuy·ªÉn d·ª•ng t·∫°i: /post-job HO·∫∂C b√°n salon t·∫°i: /sell-salon
**B∆∞·ªõc 3:** Tin ƒë·∫ßu ti√™n MI·ªÑN PH√ç! Thanh to√°n ch·ªâ cho nh·ªØng tin ti·∫øp theo.

‚ú® M·∫πo: H∆°n 80% vi·ªác l√†m ƒë∆∞·ª£c ƒëi·ªÅn ƒë·∫ßy trong 2 tu·∫ßn ƒë·∫ßu!` :
`A: **Step 1:** Sign up FREE at: /auth/signup  
**Step 2:** Post job at: /post-job OR list salon at: /sell-salon
**Step 3:** First post is FREE! Payment only for additional posts.

‚ú® Pro tip: 80% of jobs get filled within the first 2 weeks!`}

**Q: Where do I sign up?**
${detectedLanguage === 'vi' ? 
`A: ƒêƒÉng k√Ω mi·ªÖn ph√≠ ngay t·∫°i: /auth/signup
üöÄ B·∫Øt ƒë·∫ßu trong 2 ph√∫t, kh√¥ng c·∫ßn th·∫ª t√≠n d·ª•ng!` :
`A: Sign up FREE at: /auth/signup
üöÄ Get started in 2 minutes, no credit card required!`}

üåç LANGUAGE RULE: **RESPOND ONLY IN ${detectedLanguage === 'vi' ? 'VIETNAMESE' : 'ENGLISH'}!**

üåü SUNSHINE'S PERSONALITY:
- World-class business advisor with 10+ years beauty industry expertise
- Conversion-focused but genuinely helpful and encouraging
- Provides specific, actionable steps with clear ROI
- Always protects business flows and routes
- Makes complex processes feel simple and achievable

‚ö†Ô∏è CRITICAL SUCCESS RULES:
- ALWAYS identify user type first (artist/salon/customer)
- ALWAYS route signups to /auth/signup (never modify)
- ALWAYS explain clear ROI and business value
- ALWAYS provide specific next steps
- ALWAYS respond in user's language
- NEVER guess pricing - always use current rates
- NEVER break protected payment/posting flows

Remember: Every conversation should feel like talking to the best business advisor in the beauty industry who happens to know EmviApp inside and out!`;

    console.log('üß† AI System Prompt Built:', {
      promptLength: systemPrompt.length,
      language: detectedLanguage,
      userType: 'detecting...',
      version: 'V3.0-FRESH'
    });

    // Call OpenAI with world-class configuration
    const response = await fetch('https://api.openai.com/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${openAIApiKey}`,
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        model: 'gpt-4.1-2025-04-14',
        messages: [
          { role: 'system', content: systemPrompt },
          { role: 'user', content: cleanMessage }
        ],
        temperature: 0.7,
        max_tokens: 500,
        presence_penalty: 0.1,
        frequency_penalty: 0.1
      }),
    });

    if (!response.ok) {
      throw new Error(`OpenAI API error: ${response.status} ${response.statusText}`);
    }

    const data = await response.json();
    const aiResponse = data.choices[0].message.content;

    console.log('‚úÖ SUNSHINE V3.0 SUCCESS:', {
      responseLength: aiResponse.length,
      language: detectedLanguage,
      containsLinks: aiResponse.includes('/auth/signup') || aiResponse.includes('/post-job'),
      isWorldClass: aiResponse.length > 100 && !aiResponse.includes('What would you like to know'),
      version: 'V3.0-FRESH-SUCCESS'
    });

    // Store conversation (optional)
    if (userId) {
      try {
        await supabase.from('chat_logs').insert({
          user_id: userId,
          user_name: userName,
          message: cleanMessage,
          response: aiResponse,
          language: detectedLanguage,
          version: 'V3.0-FRESH'
        });
      } catch (logError) {
        console.warn('Chat log failed (non-critical):', logError);
      }
    }

    return new Response(JSON.stringify({ 
      message: aiResponse,
      language: detectedLanguage,
      userName: userName,
      version: 'V3.0-FRESH'
    }), {
      headers: { ...corsHeaders, 'Content-Type': 'application/json' },
    });

  } catch (error) {
    console.error('üí• Sunshine V3.0 Error:', error);
    
    const fallbackMessage = "Hi! I'm Sunshine ‚òÄÔ∏è, your EmviApp business advisor. I'm having a quick technical moment - please try your question again! I'm here to help with job posting, salon sales, finding artists, or any EmviApp questions. Em c≈©ng n√≥i ƒë∆∞·ª£c ti·∫øng Vi·ªát! üå∏";
    
    return new Response(JSON.stringify({ 
      message: fallbackMessage,
      fallback: true,
      version: 'V3.0-FRESH',
      error: error.message
    }), {
      status: 200,
      headers: { ...corsHeaders, 'Content-Type': 'application/json' },
    });
  }
});

// Helper function for language detection
function detectLanguage(text: string): 'vi' | 'en' {
  const vietnamesePattern = /[√†√°·∫°·∫£√£√¢·∫ß·∫•·∫≠·∫©·∫´ƒÉ·∫±·∫Ø·∫∑·∫≥·∫µ√®√©·∫π·∫ª·∫Ω√™·ªÅ·∫ø·ªá·ªÉ·ªÖ√¨√≠·ªã·ªâƒ©√≤√≥·ªç·ªè√µ√¥·ªì·ªë·ªô·ªï·ªó∆°·ªù·ªõ·ª£·ªü·ª°√π√∫·ª•·ªß≈©∆∞·ª´·ª©·ª±·ª≠·ªØ·ª≥√Ω·ªµ·ª∑·ªπƒë]/i;
  const vietnameseWords = /\b(anh|ch·ªã|em|t√™n|l√†|c·ªßa|v√†|v·ªõi|trong|nha|·∫°|∆°i|kh√¥ng|g√¨|ƒë∆∞·ª£c|c√≥|l√†m|th·∫ø|n√†y|ƒë√≥|v·ªÅ|mu·ªën|t√¨m|vi·ªác|salon|ti·ªám|tuy·ªÉn|b√°n|ƒëƒÉng|gi√∫p|c·∫ßn)\b/i;
  return vietnamesePattern.test(text) || vietnameseWords.test(text) ? 'vi' : 'en';
}