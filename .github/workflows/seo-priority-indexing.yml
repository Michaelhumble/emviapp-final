name: 📤 SEO Priority Indexing

on:
  schedule:
    # Sunday at 06:00 UTC  
    - cron: '0 6 * * 0'
  workflow_dispatch:
    inputs:
      urls_file:
        description: 'Priority URLs file'
        required: false
        default: 'data/priority-urls.json'
      dry_run:
        description: 'Dry run mode (no actual submissions)'
        type: boolean
        default: false

env:
  URLS_FILE: ${{ github.event.inputs.urls_file || 'data/priority-urls.json' }}
  DRY_RUN: ${{ github.event.inputs.dry_run || 'false' }}

jobs:
  priority-indexing:
    name: 📤 Priority URL Indexing
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 🛠️ Install dependencies
        run: |
          npm install --legacy-peer-deps
          npm install --no-save fast-xml-parser

      - name: 📁 Create directories
        run: mkdir -p .seo-cache data

      - name: 🔐 Validate Environment
        id: validate
        run: |
          echo "🔐 Run Header"
          echo "Workflow: SEO Priority Indexing"
          echo "Run ID: ${{ github.run_id }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "URLs file: $URLS_FILE"
          echo "DRY_RUN: $DRY_RUN"
          echo ""
          
          # Check required secrets
          MISSING=()
          if [ -z "${{ secrets.GSC_CLIENT_EMAIL }}" ]; then
            echo "❌ GSC_CLIENT_EMAIL: Not Configured"
            MISSING+=("GSC_CLIENT_EMAIL")
          else
            echo "✅ GSC_CLIENT_EMAIL: Configured"
          fi
          
          if [ -z "${{ secrets.GSC_PRIVATE_KEY }}" ]; then
            echo "❌ GSC_PRIVATE_KEY: Not Configured" 
            MISSING+=("GSC_PRIVATE_KEY")
          else
            echo "✅ GSC_PRIVATE_KEY: Configured"
          fi
          
          # Exit with neutral result if required secrets missing
          if [ ${#MISSING[@]} -gt 0 ]; then
            echo ""
            echo "⚠️ SKIPPED: Missing required GSC secrets"
            echo "Required secrets: ${MISSING[*]}"
            echo "result=skipped" >> $GITHUB_OUTPUT
          else
            echo "result=proceed" >> $GITHUB_OUTPUT
          fi

      - name: 📤 Submit Priority URLs (Attempt 1)
        if: steps.validate.outputs.result == 'proceed'
        id: submit_attempt1
        env:
          GSC_CLIENT_EMAIL: ${{ secrets.GSC_CLIENT_EMAIL }}
          GSC_PRIVATE_KEY: ${{ secrets.GSC_PRIVATE_KEY }}
        run: |
          echo "📤 Submitting priority URLs for indexing (Attempt 1)..."
          if [ "$DRY_RUN" = "true" ]; then
            echo "🧪 DRY RUN MODE - No actual submissions"
            node scripts/gsc-pulls.mjs --dry-run --urls=$URLS_FILE 2>&1 | tee .seo-cache/indexing-attempt1.log
          else
            node scripts/gsc-pulls.mjs --submitIndexing --urls=$URLS_FILE 2>&1 | tee .seo-cache/indexing-attempt1.log
          fi
          
          # Parse results from log
          if grep -q "submitted:" .seo-cache/indexing-attempt1.log; then
            SUBMITTED=$(grep "submitted:" .seo-cache/indexing-attempt1.log | tail -1 | sed 's/.*submitted: \([0-9]*\).*/\1/')
            echo "submitted=$SUBMITTED" >> $GITHUB_OUTPUT
            echo "success=true" >> $GITHUB_OUTPUT
          else
            echo "submitted=0" >> $GITHUB_OUTPUT
            echo "success=false" >> $GITHUB_OUTPUT
          fi
        continue-on-error: true

      - name: 🔄 Retry Submission (Attempt 2) 
        if: steps.validate.outputs.result == 'proceed' && steps.submit_attempt1.outputs.success == 'false'
        id: submit_attempt2
        env:
          GSC_CLIENT_EMAIL: ${{ secrets.GSC_CLIENT_EMAIL }}
          GSC_PRIVATE_KEY: ${{ secrets.GSC_PRIVATE_KEY }}
        run: |
          echo "🔄 Retrying URL submission after 10s delay (Attempt 2)..."
          sleep 10
          if [ "$DRY_RUN" = "true" ]; then
            echo "🧪 DRY RUN MODE - No actual submissions"  
            node scripts/gsc-pulls.mjs --dry-run --urls=$URLS_FILE 2>&1 | tee .seo-cache/indexing-attempt2.log
          else
            node scripts/gsc-pulls.mjs --submitIndexing --retry --urls=$URLS_FILE 2>&1 | tee .seo-cache/indexing-attempt2.log
          fi
          
          # Parse retry results
          if grep -q "submitted:" .seo-cache/indexing-attempt2.log; then
            SUBMITTED=$(grep "submitted:" .seo-cache/indexing-attempt2.log | tail -1 | sed 's/.*submitted: \([0-9]*\).*/\1/')
            echo "retry_submitted=$SUBMITTED" >> $GITHUB_OUTPUT
          else
            echo "retry_submitted=0" >> $GITHUB_OUTPUT
          fi
        continue-on-error: true

      - name: 📊 Generate Summary
        id: summary
        if: always()
        run: |
          echo "📊 Generating indexing summary..."
          
          # Calculate totals
          TOTAL_SUBMITTED=0
          RETRY_COUNT=0
          
          # First attempt results
          if [ "${{ steps.submit_attempt1.outputs.success }}" = "true" ]; then
            ATTEMPT1_SUBMITTED="${{ steps.submit_attempt1.outputs.submitted || 0 }}"
            TOTAL_SUBMITTED=$((TOTAL_SUBMITTED + ATTEMPT1_SUBMITTED))
          fi
          
          # Retry results
          if [ -n "${{ steps.submit_attempt2.outputs.retry_submitted }}" ]; then
            RETRY_SUBMITTED="${{ steps.submit_attempt2.outputs.retry_submitted || 0 }}" 
            TOTAL_SUBMITTED=$((TOTAL_SUBMITTED + RETRY_SUBMITTED))
            RETRY_COUNT=1
          fi
          
          echo "total_submitted=$TOTAL_SUBMITTED" >> $GITHUB_OUTPUT
          echo "retry_count=$RETRY_COUNT" >> $GITHUB_OUTPUT
          
          # Generate final indexing report
          DATE=$(date +%Y-%m-%d)
          cat > .seo-cache/gsc-indexing-${DATE}.json << EOF
          {
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "date": "$DATE",
            "workflow_run_id": "${{ github.run_id }}",
            "mode": "priority_indexing", 
            "dry_run": $DRY_RUN,
            "total_submitted": $TOTAL_SUBMITTED,
            "retry_count": $RETRY_COUNT,
            "status": "${{ steps.validate.outputs.result }}",
            "urls_file": "$URLS_FILE"
          }
          EOF

      - name: 📄 Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: seo-priority-indexing-${{ github.run_id }}
          path: |
            .seo-cache/gsc-indexing-*.json
            .seo-cache/indexing-*.log
          retention-days: 30
        if: always()

      - name: 📊 Run Footer
        if: always()
        run: |
          if [ "${{ steps.validate.outputs.result }}" = "skipped" ]; then
            echo "⚠️ SKIPPED | missing: GSC credentials | next: $(date -d '+1 week' '+Sun 06:00 UTC')"
          else
            SUBMITTED="${{ steps.summary.outputs.total_submitted || 0 }}"
            RETRIES="${{ steps.summary.outputs.retry_count || 0 }}"
            
            if [ "$DRY_RUN" = "true" ]; then
              echo "🧪 DRY RUN | simulated: $SUBMITTED URLs | retries: $RETRIES | artifacts: 1 | next: $(date -d '+1 week' '+Sun 06:00 UTC')"
            else
              echo "✅ DONE | submitted: $SUBMITTED URLs | retries: $RETRIES | artifacts: 1 | next: $(date -d '+1 week' '+Sun 06:00 UTC')"
            fi
          fi