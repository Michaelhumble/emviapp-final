name: SEO Agent Weekly Digest

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}
  schedule:
    - cron: "0 9 * * 1"   # Mondays 09:00 UTC

jobs:
  seo-weekly-digest:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
      - name: Install dependencies
        run: npm ci
        
      - name: Fail fast on missing env vars
        run: |
          echo "üîí Checking required environment variables..."
          if [ -z "${{ secrets.OPENAI_API_KEY }}" ]; then
            echo "‚ùå OPENAI_API_KEY is missing"
            exit 1
          fi
          if [ -z "${{ secrets.GSC_CLIENT_EMAIL }}" ]; then
            echo "‚ùå GSC_CLIENT_EMAIL is missing"
            exit 1
          fi
          if [ -z "${{ secrets.GSC_PRIVATE_KEY }}" ]; then
            echo "‚ùå GSC_PRIVATE_KEY is missing"
            exit 1
          fi
          echo "‚úÖ All required environment variables present"

      - name: Run SEO Agent Analysis
        run: |
          echo "ü§ñ Running SEO Agent analysis..."
          if [ -f "scripts/seo-agent.mjs" ]; then
            node scripts/seo-agent.mjs \
              --site=https://www.emvi.app \
              --out=reports \
              --maxDepth=6 \
              --includeSitemaps
          else
            echo "‚ö†Ô∏è SEO Agent script not found, running basic audit..."
            node scripts/audit-seo.mjs --site=https://www.emvi.app --out=reports --maxDepth=4 || echo "Basic audit failed"
            node scripts/validate-sitemaps.mjs || echo "Sitemap validation failed"
          fi
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_KEY }}
          GSC_CLIENT_EMAIL: ${{ secrets.GSC_CLIENT_EMAIL }}
          GSC_PRIVATE_KEY: ${{ secrets.GSC_PRIVATE_KEY }}
          DRY_RUN: false
        continue-on-error: true
        
      - name: Generate Weekly Report
        run: |
          REPORT_DATE=$(date +%Y-%m-%d)
          echo "# SEO Weekly Digest - $REPORT_DATE" > reports/weekly-digest.md
          echo "" >> reports/weekly-digest.md
          echo "## Analysis Summary" >> reports/weekly-digest.md
          
          if [ -f reports/seo-agent-summary.md ]; then
            cat reports/seo-agent-summary.md >> reports/weekly-digest.md
          else
            echo "‚ö†Ô∏è SEO agent summary not available" >> reports/weekly-digest.md
          fi
          
          echo "" >> reports/weekly-digest.md
          echo "## Broken Links Detected" >> reports/weekly-digest.md
          if [ -f reports/broken-links.csv ]; then
            BROKEN_COUNT=$(tail -n +2 reports/broken-links.csv | wc -l)
            echo "Found $BROKEN_COUNT broken links" >> reports/weekly-digest.md
            
            if [ $BROKEN_COUNT -gt 0 ]; then
              echo "" >> reports/weekly-digest.md
              echo "**Top Issues:**" >> reports/weekly-digest.md
              echo "\`\`\`" >> reports/weekly-digest.md
              head -11 reports/broken-links.csv | tail -10 >> reports/weekly-digest.md
              echo "\`\`\`" >> reports/weekly-digest.md
            fi
          else
            echo "No broken links detected ‚úÖ" >> reports/weekly-digest.md
          fi
          
          echo "" >> reports/weekly-digest.md
          echo "## Sitemap Status" >> reports/weekly-digest.md
          if [ -f reports/sitemap-validation.json ]; then
            echo "‚úÖ Sitemap validation completed - check full report for details" >> reports/weekly-digest.md
          else
            echo "‚ö†Ô∏è Sitemap validation not available" >> reports/weekly-digest.md
          fi
          
          echo "" >> reports/weekly-digest.md
          echo "## Next Actions" >> reports/weekly-digest.md
          echo "- Review broken links and fix them" >> reports/weekly-digest.md
          echo "- Check sitemap health" >> reports/weekly-digest.md
          echo "- Monitor Core Web Vitals" >> reports/weekly-digest.md
          echo "" >> reports/weekly-digest.md
          echo "---" >> reports/weekly-digest.md
          echo "*Generated on $(date) by SEO Agent*" >> reports/weekly-digest.md
        
      - name: Commit and Push Fixes
        if: github.event_name == 'schedule'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "SEO Agent"
          
          if [ -n "$(git status --porcelain)" ]; then
            git add reports/
            git commit -m "chore(seo): enable live mode + auto-commit

            - Weekly SEO agent analysis completed
            - Reports and fixes applied automatically
            - Live mode enabled (DRY_RUN=false)
            
            Generated by: SEO Agent Weekly Digest"
            
            git push || echo "‚ö†Ô∏è Could not push changes"
            echo "‚úÖ SEO fixes committed and pushed directly to main"
          else
            echo "‚ÑπÔ∏è No changes to commit"
          fi
        continue-on-error: true
        
      - name: Upload Reports
        uses: actions/upload-artifact@v4
        with:
          name: seo-weekly-digest-${{ github.run_number }}
          path: |
            reports/weekly-digest.md
            reports/seo-agent-summary.md
            reports/broken-links.csv
            reports/sitemap-validation.json
            reports/seo-report.html
          retention-days: 30
        if: always()